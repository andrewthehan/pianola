{"version":3,"sources":["MidiUtils.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Pitch","theory","Action","Object","freeze","RELEASE_SUSTAIN_PEDAL","PRESS_SUSTAIN_PEDAL","RELEASE_KEY","PRESS_KEY","createContext","midi","actions","notes","tracks","map","track","flat","notesDownByTime","reduce","r","note","key","time","push","notesDown","keys","parseFloat","action","_ref","name","velocity","notesUpByTime","duration","notesUp","_ref2","Array","from","controlChanges","filter","o","_ref3","value","sort","a","b","getActions","pressedNotes","Set","sustain","index","startTime","now","paused","App","piano","setPiano","useState","setMidi","context","setContext","volume","setVolume","pressPitch","useCallback","pitch","keyDown","getProgramNumber","releasePitch","keyUp","Piano","useMemo","lazy","async","TonePiano","maxPolyphony","Infinity","toDestination","load","getPiano","default","EtudePiano","useEffect","pressKey","releaseKey","pressSustainPedal","releaseSustainPedal","setNextContext","length","id","setTimeout","nextSustain","forEach","_ref4","add","_ref5","delete","Error","concat","_objectSpread","clearTimeout","stepContext","pedalDown","bind","pedalUp","_jsx","className","children","_jsxs","Suspense","fallback","href","target","rel","type","accept","onChange","e","file","files","reader","FileReader","onload","Midi","result","readAsArrayBuffer","onClick","setContextPaused","FaPlay","FaPause","min","max","releasePedal","fromString","get","clear","clearIntermediateContext","scrubIndex","parseInt","skipContext","Math","round","step","renderMediaControls","Fragment","start","end","onKeyPress","onKeyRelease","highlight","Boolean","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.339f253a.chunk.js","sourcesContent":["import { now } from \"tone\";\nimport { theory } from \"etude\";\n\nconst { Pitch } = theory;\n\nexport const Action = Object.freeze({\n  RELEASE_SUSTAIN_PEDAL: 0,\n  PRESS_SUSTAIN_PEDAL: 1,\n  RELEASE_KEY: 2,\n  PRESS_KEY: 3,\n});\n\nexport function getActions(midi) {\n  if (midi == null) {\n    return [];\n  }\n\n  const notes = midi.tracks.map((track) => track.notes).flat();\n\n  const notesDownByTime = notes.reduce((r, note) => {\n    const key = note.time;\n    r[key] = r[key] || [];\n    r[key].push(note);\n    return r;\n  }, {});\n  const notesDown = Object.keys(notesDownByTime).map((time) => ({\n    time: parseFloat(time),\n    action: Action.PRESS_KEY,\n    notes: notesDownByTime[time].map(({ name, midi, velocity }) => ({\n      name,\n      midi,\n      velocity,\n    })),\n  }));\n\n  const notesUpByTime = notes.reduce((r, note) => {\n    const key = note.time + note.duration;\n    r[key] = r[key] || [];\n    r[key].push(note);\n    return r;\n  }, {});\n  const notesUp = Object.keys(notesUpByTime).map((time) => ({\n    time: parseFloat(time),\n    action: Action.RELEASE_KEY,\n    notes: notesUpByTime[time].map(({ name, midi, velocity }) => ({\n      name,\n      midi,\n      velocity,\n    })),\n  }));\n\n  const sustainPedals = Array.from(\n    midi.tracks\n      .map((track) => track.controlChanges)\n      .map((controlChanges) => controlChanges[64])\n      .filter((o) => o != null)\n      .flat()\n  ).map(({ time, value }) => ({\n    time,\n    action:\n      value === 0 ? Action.RELEASE_SUSTAIN_PEDAL : Action.PRESS_SUSTAIN_PEDAL,\n  }));\n\n  const actions = [...notesDown, ...notesUp, ...sustainPedals].sort((a, b) => {\n    if (a.time !== b.time) {\n      return a.time - b.time;\n    }\n\n    if (a.action !== b.action) {\n      return a.action - b.action;\n    }\n\n    return 0;\n  });\n\n  return actions;\n}\n\nexport function createContext(midi) {\n  const actions = getActions(midi);\n  return {\n    actions,\n    pressedNotes: new Set(),\n    sustain: false,\n    index: 0,\n    startTime: now(),\n    paused: false,\n  };\n}\n\nexport function stepContext(\n  context,\n  pressKey,\n  releaseKey,\n  pressSustainPedal,\n  releaseSustainPedal,\n  setNextContext\n) {\n  const { actions, pressedNotes, sustain, index, startTime, paused } = context;\n\n  if (paused) {\n    return;\n  }\n\n  if (actions == null) {\n    return;\n  }\n\n  if (index < 0 || index >= actions.length) {\n    return;\n  }\n\n  const { time, action, notes } = actions[index];\n  const id = setTimeout(() => {\n    let nextSustain = sustain;\n    switch (action) {\n      case Action.PRESS_KEY:\n        notes.forEach(({ name, midi, velocity }) => {\n          pressedNotes.add(name);\n          pressKey({ name, midi, velocity });\n        });\n        break;\n      case Action.RELEASE_KEY:\n        notes.forEach(({ name, midi, velocity }) => {\n          pressedNotes.delete(name);\n          releaseKey({ name, midi, velocity });\n        });\n        break;\n      case Action.PRESS_SUSTAIN_PEDAL:\n        nextSustain = true;\n        pressSustainPedal();\n        break;\n      case Action.RELEASE_SUSTAIN_PEDAL:\n        nextSustain = false;\n        releaseSustainPedal();\n        break;\n      default:\n        throw new Error(`Unrecognized action: ${action}`);\n    }\n\n    setNextContext({\n      ...context,\n      sustain: nextSustain,\n      index: index + 1,\n    });\n  }, (time - (now() - startTime)) * 1000);\n\n  return () => clearTimeout(id);\n}\n\nexport function clearIntermediateContext(\n  context,\n  releaseKey,\n  releasePedal,\n  setNextContext\n) {\n  const { pressedNotes, sustain } = context;\n  pressedNotes.forEach((name) =>\n    releaseKey({\n      name,\n      midi: Pitch.fromString(name).get().getProgramNumber(),\n    })\n  );\n  if (sustain) {\n    releasePedal();\n  }\n\n  pressedNotes.clear();\n\n  setNextContext({\n    ...context,\n    sustain: false,\n    index: -1,\n    startTime: now(),\n  });\n}\n\nexport function skipContext(context, index, setNextContext) {\n  const { actions } = context;\n\n  setNextContext({\n    ...context,\n    startTime: now() - actions[index].time - 0.1,\n    index,\n  });\n}\n\nexport function setContextPaused(context, paused, setNextContext) {\n  const { actions, index } = context;\n\n  setNextContext({\n    ...context,\n    startTime: now() - actions[index].time - 0.1,\n    paused,\n  });\n}\n","import { FaPause } from \"@react-icons/all-files/fa/FaPause\";\nimport { FaPlay } from \"@react-icons/all-files/fa/FaPlay\";\nimport { Midi } from \"@tonejs/midi\";\nimport { Piano as TonePiano } from \"@tonejs/piano\";\nimport React, {\n  Fragment,\n  lazy,\n  Suspense,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\";\nimport { Piano as EtudePiano } from \"react-etude-piano\";\nimport \"./App.css\";\nimport {\n  clearIntermediateContext,\n  createContext,\n  setContextPaused,\n  skipContext,\n  stepContext,\n} from \"./MidiUtils\";\n\nfunction App() {\n  const [piano, setPiano] = useState();\n  const [midi, setMidi] = useState();\n  const [context, setContext] = useState(createContext(null));\n  const [volume, setVolume] = useState(1);\n\n  const pressPitch = useCallback(\n    (pitch) => {\n      piano.keyDown({ midi: pitch.getProgramNumber() });\n    },\n    [piano]\n  );\n\n  const releasePitch = useCallback(\n    (pitch) => {\n      piano.keyUp({ midi: pitch.getProgramNumber() });\n    },\n    [piano]\n  );\n\n  const Piano = useMemo(() => {\n    return lazy(async () => {\n      if (piano == null) {\n        const piano = await getPiano();\n        setPiano(piano);\n      }\n      return { default: EtudePiano };\n    });\n  }, [piano]);\n\n  async function getPiano() {\n    const piano = new TonePiano({ maxPolyphony: Infinity });\n    piano.toDestination();\n    await piano.load();\n\n    return piano;\n  }\n\n  useMemo(() => {\n    if (midi == null) {\n      return;\n    }\n\n    setContext(createContext(midi));\n  }, [midi]);\n\n  useEffect(() => {\n    if (piano == null) {\n      return;\n    }\n\n    return stepContext(\n      context,\n      (key) => piano.keyDown({ ...key, velocity: key.velocity * volume }),\n      (key) => piano.keyUp({ ...key, velocity: key.velocity * volume }),\n      piano.pedalDown.bind(piano),\n      piano.pedalUp.bind(piano),\n      setContext\n    );\n  }, [piano, context, volume]);\n\n  function renderHeader() {\n    return (\n      <header className=\"header flex-column justify-center align-center\">\n        <h1>Pianola</h1>\n        <span>\n          <label>by </label>\n          <a\n            href=\"https://andrewhan.dev\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            andrewhan\n          </a>\n        </span>\n      </header>\n    );\n  }\n\n  function renderFileInput() {\n    async function handleUpload(e) {\n      const file = e.target.files[0];\n      if (file == null) {\n        return;\n      }\n      const reader = new FileReader();\n      reader.onload = () => setMidi(new Midi(reader.result));\n      reader.readAsArrayBuffer(file);\n    }\n\n    return (\n      <section className=\"flex-column justify-center align-center\">\n        <label>Upload MIDI file:</label>\n        <input\n          className=\"file-input\"\n          type=\"file\"\n          accept=\".mid\"\n          onChange={handleUpload}\n        />\n      </section>\n    );\n  }\n\n  function renderMediaControls() {\n    if (midi == null) {\n      return;\n    }\n\n    function handleScrubChange(e) {\n      clearIntermediateContext(\n        context,\n        (key) => piano.keyUp({ ...key, velocity: key.velocity * volume }),\n        piano.pedalUp.bind(piano),\n        setContext\n      );\n\n      const scrubIndex = parseInt(e.target.value);\n      skipContext(context, scrubIndex, setContext);\n    }\n\n    function handlePlaybackButton() {\n      setContextPaused(context, !context.paused, setContext);\n    }\n\n    function handleVolumeChange(e) {\n      const volume = parseFloat(e.target.value);\n      setVolume(volume);\n    }\n\n    return (\n      <section className=\"flex-column justify-center align-stretch\">\n        <section className=\"media-control flex-column justify-center align-stretch\">\n          <section className=\"flex-row\">\n            <button className=\"icon-button\" onClick={handlePlaybackButton}>\n              {context.paused ? <FaPlay /> : <FaPause />}\n            </button>\n            <section className=\"flex-column justify-stretch flex\">\n              <label>\n                Progress: {context.index}/{context.actions.length}\n              </label>\n              <input\n                type=\"range\"\n                className=\"scrubber\"\n                value={context.index}\n                min={0}\n                max={context.actions.length - 1}\n                onChange={handleScrubChange}\n              />\n            </section>\n          </section>\n        </section>\n        <section className=\"media-control flex-column justify-center align-stretch\">\n          <label>Volume: {Math.round(volume * 100)}%</label>\n          <input\n            type=\"range\"\n            className=\"volume\"\n            value={volume}\n            min={0}\n            max={1}\n            step=\"any\"\n            onChange={handleVolumeChange}\n          />\n        </section>\n      </section>\n    );\n  }\n\n  function renderPiano() {\n    return (\n      <Fragment>\n        <Piano\n          className=\"piano\"\n          start=\"A0\"\n          end=\"C8\"\n          onKeyPress={pressPitch}\n          onKeyRelease={releasePitch}\n          highlight={[...context.pressedNotes]}\n        />\n        <div className={context.sustain ? \"pedal-down\" : \"pedal-up\"}>\n          Sustain pedal\n        </div>\n      </Fragment>\n    );\n  }\n\n  return (\n    <div className=\"container flex-column align-center\">\n      <Suspense fallback={<div>Loading...</div>}>\n        {renderHeader()}\n        {renderFileInput()}\n        {renderMediaControls()}\n        {renderPiano()}\n      </Suspense>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}